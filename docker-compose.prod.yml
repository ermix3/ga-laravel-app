services:
  backend:
    image: ${DOCKER_PROVIDER_USERNAME}/${IMAGE_NAME}:${IMAGE_TAG}
    container_name: ${APP_NAME}_backend
    restart: unless-stopped
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/up"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./.env:/var/www/html/.env
      - ./backend_data/storage:/var/www/html/storage
    networks:
      - fullstack-network

  db:
    image: mysql:8.0
    container_name: ${APP_NAME}_db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      # Backup configuration
      - BACKUP_RETENTION_DAYS=7
      - BACKUP_SCHEDULE=0 0 * * *
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 90s
    volumes:
      - ./db_data:/var/lib/mysql
      # Mount backup directory
      - ./backups:/backups
      # Mount backup script
      - ./db-backup.sh:/db-backup.sh
      # Mount custom entrypoint that sets up cron
      - ./db-entrypoint.sh:/custom-entrypoint.sh
    command: ["bash", "/custom-entrypoint.sh"]
    networks:
      - fullstack-network

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: ${APP_NAME}_phpmyadmin
    restart: unless-stopped
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    depends_on:
      - db
    networks:
      - fullstack-network

networks:
  fullstack-network:
    external: true
